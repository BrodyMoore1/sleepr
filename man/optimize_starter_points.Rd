% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimize_starter_points.R
\name{optimize_starter_points}
\alias{optimize_starter_points}
\title{Optimize Starter Points}
\usage{
optimize_starter_points(data, player_df = NA)
}
\arguments{
\item{data}{A dataframe containing player information for each roster, including columns such as:
\describe{
\item{\code{player_id}}{The unique ID of the player.}
\item{\code{roster_id}}{The ID of the roster the player belongs to.}
\item{\code{player_position}}{The position of the player (e.g., QB, RB, WR, etc.).}
\item{\code{player_points}}{The points scored by the player.}
}}

\item{player_df}{A dataframe containing player metadata (default: \code{NA}). If not provided,
the function calls \code{get_player_df()} to fetch the player data dynamically.}
}
\value{
A list with two elements:
\describe{
\item{\code{optimizer_defined}}{A dataframe indicating whether each player is "optimal" or "sub_optimal".}
\item{\code{optimizer_aggregated}}{A dataframe summarizing total "optimal" starter points for each roster.}
}
}
\description{
Optimizes the allocation of starter points for each roster based on player positions and their scores.
}
\details{
This function takes player data and assigns "optimal" or "sub_optimal" designations to players
based on their position and points scored. It optionally fetches player information using the
\code{get_player_df} function if a \code{player_df} is not provided. It then aggregates the total points
for "optimal" starters for each roster.
}
\examples{
\dontrun{
# Example usage with dynamically fetched player data
player_data <- tibble::tibble(
  roster_id = c(1, 1, 1, 2, 2),
  player_id = c("8138", "11563", "11631", "9509", "GB"),
  player_position = c("RB", "RB", "QB", "WR", "D"),
  player_points = c(25, 15, 20, 10, 8),
  is_starter = c("starter_points", "starter_points", "starter_points", "bench_points", "bench_points"),
  week = rep(16, 5)
)

optimized_data <- optimize_starter_points(player_data)
optimizer_defined <- optimized_data$optimizer_defined
optimizer_aggregated <- optimized_data$optimizer_aggregated
print(optimizer_defined)
print(optimizer_aggregated)
}
}
